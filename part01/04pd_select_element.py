# -*- coding: utf-8 -*-

import pandas as pd
'''
데이터프레임에서 특정 원소 하나를 선택할때에는 Java의 배열과 비슷하게
행과 열의 인덱스를 통해 선택할수있다.
'''
exam_data = {'이름' : ['유비', '관우', '장비'],
             '국어' : [90, 80, 70 ],
             '영어' : [98, 89, 95],
             '수학' : [85, 95, 100],
             '체육' : [100, 90, 90]}
df = pd.DataFrame(exam_data)
# 최초로 생성한 데이터프레임은 인덱스를 별도로 지정하지 않았으므로
# 숫자형 인덱스가 자동으로 부여된다.
print(df)

# 현재 숫자형 인덱스만 부여된 상태이므로 '유비'를 통해서 행에 접근할 수 없다.
###a = df.loc['유비', '수학'] # 오류발생
a = df.loc[0, '수학']
print(a) # 85점 출력

# set_index()를 사용해서 '이름'열의 데이터를 행 인덱스로 지정한다.
df.set_index('이름', inplace=True)
# 인덱스 지정후 출력하면 숫자형인덱스 부분은 제거된다.
print(df)

# 특정 원소 1개를 선택한다.[행, 열] : 유비의 수학 점수
a = df.loc['유비', '수학']
print(a)
b = df.iloc[0, 2]
print(b) # 위 2개의 출력문의 결과는 동일하다.

# 2개 이상의 원소 선택 : 유비의 수학 및 체육 점수
c = df.loc['유비', ['수학', '체육']] # 문자인덱스 사용
print(c)
d = df.iloc[0, [2, 3]] # 숫자 인덱스 사용
print(d)
# 범위를 통해 2개이상의 원소를 선택
e = df.loc['유비', '수학':'체육']
print(e)
# 인덱스 2부터 마지막까지의 원소를 선택
f = df.iloc[0, 2:] # -- 2: 은 파이썬의 슬라이싱과 같이 2부터 끝까지를 의미함.
print(f)

# 2개 이상의 행과 열을 선택 : 유비, 관우의 수학 및 체육점수
g = df.loc[['유비', '관우'], ['수학', '체육']]
print(g)
h = df.iloc[[0, 1], [2, 3]]
print(h)
i = df.loc['유비':'관우', '수학':'체육']
print(i)
j = df.iloc[0:2, 2:]
print(j)